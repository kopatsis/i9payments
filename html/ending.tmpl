{{/* page.tmpl */}}
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Subscription Ending Soon</title>
  <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.10.0/dist/cdn.min.js" defer></script>
  <link rel="stylesheet" href="/static/styles.css">
</head>

<body>
  <div class="centerpage">
    <div class="wholepage" x-data="{ showModal: false }">
      <div class="loghead" x-data="dimensionHandler()" x-init="updateDimensions()" @resize.window="updateDimensions()"
        x-bind:style="{ fontSize: fontSize + 'px', height: height + 'px' }">
        <div class="logheadtxt icon">
          <a href="/" style="text-decoration: none; color: inherit">&#10224;</a>
        </div>
        <b class="logheadtxt headname">i9 Admin</b>
        <div class="logheadtxt icon" @click="showModal = !showModal" x-text="showModal ? '&#10006;' : '&#9776;'"></div>
      </div>

      <div x-show="showModal" class="modal" @keydown.window.escape="showModal = false">
        <div x-show="showModal" class="modal-content" x-on:click.away="showModal = false" x-data="dimensionFixHandler()"
          x-init="updateDimensions()" @resize.window="updateDimensions()" x-bind:style="{ top: top + 'px' }"
          x-bind:class="{ 'enter': showModal, 'leave': !showModal }"
          x-transition:leave="transition: opacity 0.3s ease-in, transform 0.3s ease-in;"
          x-transition:leave-start="opacity: 1; transform: translateY(0);"
          x-transition:leave-end="opacity: 0; transform: translateY(-200px);">
          <button class="menu-button">
            <a href="/" style="text-decoration: none; color: inherit">Home Page</a>
          </button>
          {{ if not .Mobile }}
          <button class="menu-button">
            <a href="/pay" style="text-decoration: none; color: inherit">Giga Membership</a>
          </button>
          {{ end }}
          <button class="menu-button">
            <a href="/login" style="text-decoration: none; color: inherit">Login Page</a>
          </button>
          <button class="menu-button">
            <a href="/logout" style="text-decoration: none; color: inherit">Sign Out</a>
          </button>
        </div>
      </div>

      <div class="innercontent" x-data="undoHandler()">
        <div class="partialHead">Your subscription is still active</div>
        <div>but has been cancelled and will be ending on {{.Date}}</div>
        <div>
          You can always
          <button class="submit" @click="undoCancellation">
            Undo Cancellation
          </button>
        </div>
        <div x-show="errorMessage" x-text="errorMessage" style="color: rgb(222, 0, 0)"></div>
      </div>
    </div>
  </div>

  <script>
    function dimensionHandler() {
      return {
        fontSize: 16,
        height: 24,
        updateDimensions() {
          const width = window.innerWidth;
          const height = window.innerHeight;
          const size = Math.min(width, height) * 0.08;
          this.fontSize = Math.max(16, Math.min(48, size));

          const heightSize = Math.min(width, height) * 0.1;
          this.height = Math.max(24, Math.min(54, heightSize));
        },
      };
    }

    function dimensionFixHandler() {
      return {
        top: 24,
        updateDimensions() {
          const width = window.innerWidth;
          const height = window.innerHeight;
          const heightSize = Math.min(width, height) * 0.1;
          this.top = Math.max(24, Math.min(54, heightSize));
        },
      };
    }

    function undoHandler() {
      return {
        errorMessage: "",
        async undoCancellation() {
          try {
            const response = await fetch("/uncancel", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              credentials: "include",
            });
            if (response.ok) {
              location.reload();
            } else {
              this.errorMessage =
                "Failed to undo cancellation. Please try again.";
            }
          } catch (error) {
            this.errorMessage = "An error occurred. Please try again.";
          }
        },
      };
    }
  </script>
</body>

</html>
<!-- 
<style>
  @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

  * {
    font-family: "Poppins", sans-serif;
  }

  body {
    margin: 0;
    padding: 0;
  }

  .centerpage {
    display: flex;
    align-items: center;
    justify-content: center;
    display: flex;
    position: fixed;
    background-color: rgb(97, 97, 97);
    width: 100dvw;
    height: 100dvh;
  }

  .wholepage {
    height: 100dvh;
    width: min(100dvw, 750px);
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    position: fixed;
    background: white;
    overflow-y: auto;
  }

  .innercontent {
    /* flex: 1; */
    display: flex;
    flex-direction: column;
    /* overflow-y: auto; */
    width: 100%;
    align-items: center;
  }

  .loghead {
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    background: white;
    height: clamp(24px, 10dvw, 54px);
    font-size: clamp(16px, 8dvw, 48px);
    z-index: 5;
  }

  .logheadtxt {
    /* font-size: clamp(16px, 8dvw, 48px); */
    user-select: none;
  }

  .submit {
    border-radius: 0px;
    transition: border-color 150ms ease-in-out 0s;
    outline: none;
    font-size: 16px;
    margin: 10px;
    padding-top: 6px;
    padding-bottom: 6px;
    padding-left: 12px;
    padding-right: 12px;
    border: 1px solid rgb(137, 151, 155);
    color: inherit;
    background-color: transparent;
    font-weight: normal;
    cursor: pointer;
  }

  .submit:hover {
    background-color: aliceblue;
  }

  .partialHead {
    font-size: 1.6em;
    font-weight: bold;
  }

  .modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.44);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 3;
    cursor: pointer;
  }

  .modal-content {
    position: fixed;
    right: calc((100dvw - min(100dvw, 750px)) / 2);
    top: clamp(24px, 10dvw, 54px);
    margin: 0;
    padding: 15px;
    background: white;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    z-index: 5;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow-y: auto;
    overflow-x: auto;
    cursor: default;
    max-height: 90dvh;
    max-width: 87.9dvw;
  }

  .menu-button {
    margin-top: 5px;
    background: none;
    border: none;
    color: rgb(59, 59, 59);
    text-decoration: none;
    cursor: pointer;
    padding: 0;
    font-family: inherit;
    font-size: inherit;
  }

  .menu-button:hover,
  .menu-button:focus {
    text-decoration: underline;
  }

  .icon {
    cursor: pointer;
  }

  .headname {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
</style> -->