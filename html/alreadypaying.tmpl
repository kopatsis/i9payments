{{/* page.tmpl */}}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Manage Membership</title>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.2.3"></script>
    <script src="https://js.stripe.com/v3/"></script>
  </head>

  <body>
    <div x-data="{ showError: false, errorMessage: '' }">
      {{if eq .Length "monthly"}}
      <div>Subscription Plan: $4.99 Monthly</div>
      <button @click="swapFrequency('yearly')">Change to $49.99 Yearly</button>
      {{else}}
      <div>Subscription Plan: $49.99 Yearly</div>
      <button @click="swapFrequency('monthly')">Change to $4.99 Monthly</button>
      {{ end }}

      <div x-show="showError">
        <p x-text="errorMessage"></p>
      </div>
    </div>

    <div>*Will begin at the end of this current billing cycle</div>

    <div>Next billing cycle charge date: {{.Date}}</div>

    <p>Email: {{.Email}}</p>

    {{ if .External }}
    <p>Your payment is managed through {{.External}}.</p>
    {{ else }}
    <p>
      Your payment is managed by a card with the brand {{.Brand}} and last four
      digits of {{.Four}}.
    </p>
    {{ end }}

    <button @click="showForm = !showForm">Update Payment Method</button>

    <div
      id="payment-update-form"
      x-data="{ showForm: false }"
      x-show="showForm"
    >
      <form id="payment-form">
        <div id="payment-element"></div>
        <button type="submit">Submit New Payment Method</button>
        <button type="button" @click="showForm = false">Cancel</button>
      </form>
    </div>

    <div id="error-message"></div>

    <div x-data="{ showConfirm: false, showError: false }">
      <button x-show="!showConfirm" @click="showConfirm = true">
        Cancel Membership
      </button>

      <div x-show="showConfirm">
        <p>Are you sure you want to cancel your membership?</p>
        <button @click="cancelMembership">Confirm</button>
        <button @click="showConfirm = false">Go Back</button>
      </div>

      <div x-show="showError">
        <p>Error cancelling membership. Please try again.</p>
      </div>
    </div>

    <div>
      <button><a href="/logout">Logout</a></button>
    </div>

    <script>
      function cancelMembership() {
        fetch("/cancel", {
          method: "POST",
          credentials: "include",
        })
          .then((response) => {
            if (response.ok) {
              window.location.reload();
            } else {
              this.showError = true;
              this.showConfirm = false;
            }
          })
          .catch(() => {
            this.showError = true;
            this.showConfirm = false;
          });
      }

      function swapFrequency(newFrequency) {
        const formData = new FormData();
        formData.append("frequency", newFrequency);

        fetch("/swap", {
          method: "POST",
          credentials: "include",
          body: formData,
        })
          .then((response) => {
            if (response.ok) {
              window.location.reload();
            } else {
              response.text().then((text) => {
                this.showError = true;
                this.errorMessage = text;
              });
            }
          })
          .catch((error) => {
            this.showError = true;
            this.errorMessage = "An error occurred. Please try again.";
          });
      }

      document.addEventListener("DOMContentLoaded", async () => {
        const stripe = Stripe(
          "pk_test_51PJLOAIstWH7VBmuSbipom0Z6Gy1Wj6wOjFtApmfGspxtTCywa9WEhP1UjB5XheYdCVXnUScy1zChx4lagbeZYvE002At1oIiP"
        );
        const clientSecret = "{{ .ClientSecret }}";

        const elements = stripe.elements({ clientSecret });
        const paymentElement = elements.create("payment");
        paymentElement.mount("#payment-element");

        const form = document.getElementById("payment-form");
        form.addEventListener("submit", async (event) => {
          event.preventDefault();

          const { setupIntent, error } = await stripe.confirmSetup({
            elements,
            confirmParams: {
              return_url: window.location.href,
            },
            redirect: "if_required",
          });

          if (error) {
            document.getElementById("error-message").textContent =
              error.message;
          } else {
            const paymentMethodId = setupIntent.payment_method;

            const response = await fetch("/update", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              credentials: "include",
              body: JSON.stringify({
                subscription_id: "{{.Customer}}",
                payment_method_id: paymentMethodId,
                customer_id: "{{.Subscription}}",
              }),
            });

            if (response.ok) {
              location.reload();
            } else {
              const errorData = await response.json();
              document.getElementById("error-message").textContent =
                errorData.error;
            }
          }
        });
      });
    </script>

  </body>
</html>
