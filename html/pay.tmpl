<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stripe Payment</title>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.2.3"></script>
    <script src="https://js.stripe.com/v3/"></script>
</head>
<body>

<div x-data="paymentHandler()" x-init="init()">
    <form id="payment-form" action="/process-payment" method="POST" @submit.prevent="handlePayment">
        <div>
            <label>
                <input type="radio" name="subscription" value="monthly" x-model="subscription" checked>
                Monthly ($4.99/month)
            </label>
            <label>
                <input type="radio" name="subscription" value="yearly" x-model="subscription">
                Yearly ($49.99/year)
            </label>
        </div>
        <div id="card-element"><!-- Stripe Elements will be inserted here --></div>
        <button type="submit">Pay</button>
        <input type="hidden" name="paymentMethod" x-model="paymentMethod">
        <input type="hidden" name="email" :value="email">
        <input type="hidden" name="userId" :value="userId">
        <input type="hidden" name="subscription" :value="subscription">
    </form>

    <div id="payment-message" style="display: none; color: red;"></div>
</div>

<script>
function paymentHandler() {
    return {
        stripe: Stripe('pk_test_51PJLOAIstWH7VBmuSbipom0Z6Gy1Wj6wOjFtApmfGspxtTCywa9WEhP1UjB5XheYdCVXnUScy1zChx4lagbeZYvE002At1oIiP'),
        cardElement: null,
        paymentMethod: '',
        email: document.getElementById('user-data').dataset.email,
        userId: document.getElementById('user-data').dataset.id,
        subscription: 'monthly',

        init() {
            const elements = this.stripe.elements();
            this.cardElement = elements.create('card');
            this.cardElement.mount('#card-element');
        },

        async handlePayment() {
            const {paymentMethod, error} = await this.stripe.createPaymentMethod({
                type: 'card',
                card: this.cardElement,
            });
            if (error) {
                const messageElement = document.getElementById('payment-message');
                messageElement.textContent = error.message;
                messageElement.style.display = 'block';
            } else {
                this.paymentMethod = paymentMethod.id;
                this.$el.submit();
            }
        }
    }
}

document.addEventListener('alpine:init', () => {
    Alpine.data('paymentHandler', paymentHandler);
});
</script>

<div id="user-data" data-email="{{.UserEmail}}" data-id="{{.UserID}}" style="display: none;"></div>

</body>
</html>
