<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login Page</title>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.10.0/dist/cdn.min.js" defer></script>
    <script type="module">
      import { initializeApp } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-app.js";
      import {
        getAuth,
        signInWithEmailAndPassword,
      } from "https://www.gstatic.com/firebasejs/10.11.0/firebase-auth.js";

      const firebaseConfig = {
        apiKey: "AIzaSyBOksfyE0unI87E533LWTKV6jpW-F1dqDA",
        authDomain: "i9auth.firebaseapp.com",
        projectId: "i9auth",
        storageBucket: "i9auth.appspot.com",
        messagingSenderId: "284108905250",
        appId: "1:284108905250:web:b866b21949e149af7ca37b",
      };

      const app = initializeApp(firebaseConfig);
      const auth = getAuth(app);

      // Expose the necessary Firebase functions globally
      window.signInWithEmailAndPassword = signInWithEmailAndPassword;
      window.auth = auth;
    </script>
  </head>
  <body x-data="loginHandler">
    <h1>Login</h1>
    {{ if .Email }}
    <div style="margin-top: 20px">
      <p>
        You are logged in as <strong>{{ .Email }}</strong>
      </p>
      <a href="/" style="text-decoration: none">
        <button type="button">Proceed</button>
      </a>
    </div>
    {{ end }}

    <input type="email" x-model="email" placeholder="Email" />
    <input type="password" x-model="password" placeholder="Password" />
    <button @click="login">Login</button>

    <a href="/new" style="text-decoration: none">
      <button>Create New Account</button>
    </a>

    <script>
      function loginHandler() {
        return {
          email: "",
          password: "",
          login() {
            console.log(window.auth, window.signInWithEmailAndPassword);
            console.log(window.auth, this.email, this.password);
            window.signInWithEmailAndPassword(window.auth, this.email, this.password)
              .then((userCredential) => {
                console.log("??????")
                const idTokenPromise = userCredential.user.getIdToken();
                const refreshToken = userCredential.user.refreshToken;
                console.log(idTokenPromise, refreshToken);
                return Promise.all([idTokenPromise, refreshToken]);
              })
              .then(([idToken, refreshToken]) => {
                console.log(idToken, refreshToken);
                return fetch("/verifyToken", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify({ idToken, refreshToken, name: "" }),
                });
              })
              .then((response) => {
                if (response.ok) {
                  console.log("Token verified");
                  window.location.assign("/");
                } else {
                  response.json().then((data) => console.error("Token verification failed", data));
                }
              })
              .catch((error) => {
                console.error("Login failed:", error.code, error.message);
              });
          },
        };
      }
    </script>
  </body>
</html>
